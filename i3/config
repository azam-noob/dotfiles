set $mod Mod4

font pango:System San Francisco Display 11

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# start a terminal
bindsym $mod+Return exec i3-sensible-terminal

# kill focused window
bindsym $mod+Shift+q kill

set $bg-color 	         #2f343f
set $inactive-bg-color   #2f343f
set $text-color          #f3f4f5
set $inactive-text-color #676E7D
set $urgent-bg-color     #E53935

# window colors
#                       border              background         text                 indicator
client.focused          $bg-color           $bg-color          $text-color          #00ff00
client.unfocused        $inactive-bg-color $inactive-bg-color $inactive-text-color  #00ff00
client.focused_inactive $inactive-bg-color $inactive-bg-color $inactive-text-color  #00ff00
client.urgent           $urgent-bg-color    $urgent-bg-color   $text-color          #00ff00

# Make Rofi transparent.
exec --no-startup-id compton -f -b

# start rofi (a program launcher)
bindsym $mod+d exec rofi -show run -lines 3 -eh 2 -width 100 -padding 300 -opacity "90" -bw 0 -font "System San Francisco Display 18"

# change focus
bindsym $mod+j focus left
bindsym $mod+k focus down
bindsym $mod+l focus up
bindsym $mod+semicolon focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+j move left
bindsym $mod+Shift+k move down
bindsym $mod+Shift+l move up
bindsym $mod+Shift+semicolon move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
bindsym $mod+h split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+p focus parent

# focus the child container
#bindsym $mod+d focus child

set $workspace1 1: 
set $workspace2 2: 
set $workspace3 3: 
set $workspace4 4: 
set $workspace5 5: 
set $workspace6 6: 
set $workspace7 7: 
set $workspace8 8: 
set $workspace9 9: 
set $workspace10 10: 

exec i3-msg workspace $workspace3

# switch to workspace
bindsym $mod+1 workspace $workspace1
bindsym $mod+2 workspace $workspace2
bindsym $mod+3 workspace $workspace3
bindsym $mod+4 workspace $workspace4
bindsym $mod+5 workspace $workspace5
bindsym $mod+6 workspace $workspace6
bindsym $mod+7 workspace $workspace7
bindsym $mod+8 workspace $workspace8
bindsym $mod+9 workspace $workspace9
bindsym $mod+0 workspace $workspace10

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace $workspace1
bindsym $mod+Shift+2 move container to workspace $workspace2
bindsym $mod+Shift+3 move container to workspace $workspace3
bindsym $mod+Shift+4 move container to workspace $workspace4
bindsym $mod+Shift+5 move container to workspace $workspace5
bindsym $mod+Shift+6 move container to workspace $workspace6
bindsym $mod+Shift+7 move container to workspace $workspace7
bindsym $mod+Shift+8 move container to workspace $workspace8
bindsym $mod+Shift+9 move container to workspace $workspace9
bindsym $mod+Shift+0 move container to workspace $workspace10

# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart
# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -b 'Yes, exit i3' 'i3-msg exit'"

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym j resize shrink width 10 px or 10 ppt
        bindsym k resize grow height 10 px or 10 ppt
        bindsym l resize shrink height 10 px or 10 ppt
        bindsym semicolon resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape
        bindsym Return mode "default"
        bindsym Escape mode "default"
}

bindsym $mod+r mode "resize"

# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
# bar {
# 	# Custom bar.
#         status_command yabar
#         tray_output primary
# }

exec_always --no-startup-id $HOME/.config/polybar/launch.sh
# Custom commands

set $Locker lock -f Ubuntu -t "Type password to unlock!"

# To change brightness with fn keys.
# xbacklight is and external tool.
bindsym XF86MonBrightnessDown exec xbacklight -dec 10
bindsym XF86MonBrightnessUp exec xbacklight -inc 10

# To change volume with fn keys.
bindsym XF86AudioLowerVolume exec amixer set 'Master' 10%-
bindsym XF86AudioRaiseVolume exec amixer set 'Master' 10%+

# Toggle mute/unmute with fn keys.
bindsym XF86AudioMute, exec amixer -D pulse set Master toggle

# To set wallpaper use some external tool something like 'feh'

# For feh use the following command to set the wallpaper. For more options see 'man feh'
# feh --bg-fill Pictures/wallpaper.jpg
# To set wallpaper everytime we just need to run the following command on every startup. We don't need to run the above command everytime.
exec_always ~/.fehbg

# Assign specific worspaces to different applications.
assign [class="Gnome-terminal"] → $workspace1
assign [class="Atom"] → $workspace2
assign [class="Google-chrome"] → $workspace3

assign [class="Nautilus"] → $workspace9
assign [class="vlc"] → $workspace10

# To go back to previous workspace with using the same key binding.
workspace_auto_back_and_forth yes

# Lock the screen after some inactive time.
# The same xautolock session is used when lock with keys.
# Fix it.
# exec_always xautolock -detectsleep -time 5 -locker $Locker -notify 30 -notifier "notify-send -u critical -t 10000 -- 'LOCKING screen in 30 seconds!'"

# tab through workspaces
bindsym $mod+Tab workspace next
bindsym $mod+Shift+Tab workspace prev

#Power Management

set $mode_system  l |  s |  e |  r |  S
mode "$mode_system" {
	bindsym l exec --no-startup-id $Locker, mode "default"
	bindsym s exec --no-startup-id $Locker; exec systemctl suspend, mode "default"
	bindsym e exec --no-startup-id i3-msg exit, mode "default"
	bindsym r exec --no-startup-id systemctl reboot, mode "default"
	bindsym Shift+s exec --no-startup-id systemctl poweroff -i, mode "default" 

	# back to normal: Enter or Escape
    bindsym Return mode "default"
    bindsym Escape mode "default"
    }
bindsym $mod+Escape mode "$mode_system"

# for i3-gaps.
for_window [class="^.*"] border pixel 0

set $mode_gaps Gaps: (o) outer, (i) inner
set $mode_gaps_outer Outer Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_inner Inner Gaps: +|-|0 (local), Shift + +|-|0 (global)
bindsym $mod+Shift+g mode "$mode_gaps"

mode "$mode_gaps" {
        bindsym o      mode "$mode_gaps_outer"
        bindsym i      mode "$mode_gaps_inner"
        bindsym Return mode "default"
        bindsym Escape mode "default"
}

mode "$mode_gaps_inner" {
        bindsym plus  gaps inner current plus 5
        bindsym minus gaps inner current minus 5
        bindsym 0     gaps inner current set 0

        bindsym Shift+plus  gaps inner all plus 5
        bindsym Shift+minus gaps inner all minus 5
        bindsym Shift+0     gaps inner all set 0

        bindsym Return mode "default"
        bindsym Escape mode "default"
}
mode "$mode_gaps_outer" {
        bindsym plus  gaps outer current plus 5
        bindsym minus gaps outer current minus 5
        bindsym 0     gaps outer current set 0

        bindsym Shift+plus  gaps outer all plus 5
        bindsym Shift+minus gaps outer all minus 5
        bindsym Shift+0     gaps outer all set 0

        bindsym Return mode "default"
        bindsym Escape mode "default"
}

smart_gaps on

# Start chrome at startup
exec --no-startup-id google-chrome

# Redshift bindings.

set $Redshift redshift '-l 31.45282:74.32036'

set $mode_redshift   s|   S
mode "$mode_redshift" {
    bindsym s exec --no-startup-id $Redshift, mode "default"
    bindsym Shift+s exec --no-startup-id killall redshift, mode "default"

    # back to normal: Enter or Escape
    bindsym Return mode "default"
    bindsym Escape mode "default"
}

bindsym $mod+a mode "$mode_redshift"

# Start redshift at startup.
exec --no-startup-id $Redshift

